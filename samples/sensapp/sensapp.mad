#
# SensApp architecture
#

service Dispatcher {

    settings {
        queue: FIFO
    }

    operation dispatch {
        retry (delay: exponential(5), limit: 10) {
            query Registry/check
            invoke Storage/store
        }
        ignore {
            invoke Notifier/notify
        }
    }

}

service Registry {

    operation check {
        think 2
    }

}

service Storage {

    settings {
        queue: FIFO
    }

    operation store {
        retry(limit: 2, delay:exponential(5)) {
            query DB/insert {timeout:10, priority: 10}
        }
    }

    operation search {
        query DB/select {priority: 5}
    }
}

service Notifier {

    settings {
        queue: FIFO
        autoscaling {
            period: 10
            limits: [1, 40]
        }
    }

    operation notify {
        #query Storage/search
        invoke Followers/found
    }

}

# Stubs to close the architecture

client Sensors {
    every 5 {
        invoke Dispatcher/dispatch
    }
}

client WebUI {
    every 20 {
        query Storage/search
    }
}

service Followers {
    operation found {
        think 5
    }
}

service DB {

    settings {
        queue: LIFO
        throttling: tail-drop(100)
        autoscaling {
            period: 10
            limits: [1, 3]
        }
    }

    operation insert {
        think 4
    }

    operation select {
        think 10
    }

}